{
  "name": "ajax-request",
  "version": "1.2.1",
  "description": "Http request for nodejs, and it also support file download",
  "main": "index.js",
  "scripts": {
    "test": "mocha"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/douzi8/ajax-request"
  },
  "keywords": [
    "request",
    "http",
    "ajax",
    "http",
    "request",
    "http download",
    "image",
    "json",
    "resource",
    "download",
    "file download",
    "base64",
    "image base64"
  ],
  "author": {
    "name": "douzi",
    "email": "liaowei08@gmail.com"
  },
  "license": "ISC",
  "devDependencies": {
    "body-parser": "^1.10.2",
    "express": "^4.11.1",
    "grunt": "^0.4.5",
    "grunt-contrib-jshint": "^0.10.0",
    "serve-static": "^1.8.1"
  },
  "dependencies": {
    "file-system": "^2.1.1",
    "utils-extend": "^1.0.7"
  },
  "readme": "# ajax-request â€” Simplified http request\n[![NPM](https://nodei.co/npm/ajax-request.png?downloads=true&downloadRank=true&stars=true)](https://nodei.co/npm/ajax-request/)\n```js\nvar request = require('ajax-request');\n```\n\n## install\n```\nnpm install ajax-request --save\n```\n\n### test\n```\nmocha\n```\n\n## API\n### request(options, callback)\n* {obejct|string} ``options`` required  \n  If the options is string, it will send get request.\n  * {string} ``options.url`` required\n  * {string} ``options.method`` [options.method=GET]  \n  The http request type\n  * {obejct} ``options.data``  \n  if the request type is `GET`, it's appended to query string of the URL, or it's sended to remote of body.\n  * {object} ``options.headers``  \n  An object containing request headers.\n  * {string} ``options.encoding``  \n  Set response data encoding\n  * {boolean} ``options.isBuffer``  [options.isBuffer=false]  \n  Parse response data to buffer\n  * {boolean} ``options.json`` [options.json=false]  \n  Parse response data to json\n* {function} ``callback`` required\n\n```js\nrequest('url', function(err, res, body) {});\n\nrequest({\n  url: '',\n  method: 'GET',\n  data: {\n    query1: 'value1'\n  }\n}, function(err, res, body) {\n  \n});\n```\n\n### .post(options, callback)\nThe API same as request\n```js\nrequest.post({\n  url: 'url',\n  data: {},\n  headers: {}\n});\n```\n\n### .download(options, callback)\n* {obejct} ``options`` required\n  * ``options.url`` {string} required\n  * ``options.ignore`` {boolean} [options.ignore=false]  \n  Is the filepath ignore case. \n  * ``options.rootPath`` {string} [options.rootPath='']  \n  The root of dest path\n  * ``options.destPath`` {string|function}  \n  Custom the download path.\n* {function} ``callback`` required\n\n```js\nrequest.download({\n  url: 'path/index.png',\n  rootPath: ''\n}, function(err, res, body, destpath) {});\n\nrequest.download({\n  url: 'path/index.png',\n  destPath: function(filename) {\n    return filename;\n  }\n}, function(err, res, body, destpath) { });\n\n```\n\n### .base64(url, callback)\nDeprecated, move to [base64](https://github.com/douzi8/base64-img#requestbase64url-callback)",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/douzi8/ajax-request/issues"
  },
  "_id": "ajax-request@1.2.1",
  "dist": {
    "shasum": "7816fa6969ed30009d32f89d04385f54f48dd1fb"
  },
  "_from": "ajax-request@",
  "_resolved": "https://registry.npmjs.org/ajax-request/-/ajax-request-1.2.1.tgz"
}
